TRUE & 1
TRUE & 0
1 & 2
q()
m<-matrix(c(4,4, 3,5, 1,2, 5,5, 0,1, 2,2, 4,5, 2,1),2,8))
m<-matrix(c(4,4, 3,5, 1,2, 5,5, 0,1, 2,2, 4,5, 2,1),2,8)
(m<-t(m))
c<-matrix(c(0,1,2,2),2,2)
(c<-t(c))
(clasificacionns=(kmeans(m,c,4)))
(m=cbind(clasificacionns$cluster, m))
mc1 = subset(m,m[,1]==1)
mc2 = subset(m,m[,1]==2)
mc1
mc2
(mc1=mc1[,-1])
(mc2=mc2[,-1])
install.packages("LearnClust")
install.packages("LearnClust")
library()
search()
library(LearnClust)
search()
m<-matrix(c(0.89, 2.94, 4.36, 5.21, 3.75, 1.12, 6.25, 3.14, 4.1, 1.8, 3.9, 4.27), 2, 6)
(m<-t(m))
agglomerativeHC(m,'EUC', 'MIN')
agglomerativeHC.details(m,'EUC', 'MIN')
agglomerativeHC.details(m,'EUC', 'MAX')
# Crear el dataframe
df <- data.frame(
X1 = c(1, 0, 1),
X2 = c(0, 1, 0),
X3 = c(1, 1, 0),
X4 = c(0, 0, 1),
X5 = c(1, 1, 1)
)
# Mostrar el dataframe original
print("DataFrame Original:")
print(df)
# Usar subset para obtener las columnas que tienen el valor 1 para cada fila
result <- subset(df, select = c(X1, X2, X3, X4, X5), subset = X1 == 1 | X2 == 1 | X3 == 1 | X4 == 1 | X5 == 1)
# Mostrar el resultado
print("Resultado:")
print(result)
# Crear el dataframe
df <- data.frame(
X1 = c(1, 0, 1),
X2 = c(0, 1, 0),
X3 = c(1, 1, 0),
X4 = c(0, 0, 1),
X5 = c(1, 1, 1)
)
# Mostrar el dataframe original
print("DataFrame Original:")
print(df)
# Inicializar una lista para almacenar los resultados
result_list <- list()
# Iterar sobre las filas
for (i in 1:nrow(df)) {
# Obtener las columnas que tienen el valor 1 para la fila actual
result <- names(df)[df[i, ] == 1]
# Almacenar el resultado en la lista
result_list[[i]] <- result
}
# Convertir la lista de resultados en un dataframe
result_df <- as.data.frame(do.call(rbind, result_list))
# Mostrar el resultado
print("Resultado:")
print(result_df)
df <- data.frame(
X1 = c(1, 0, 1),
X2 = c(0, 1, 0),
X3 = c(1, 1, 0),
X4 = c(0, 0, 1),
X3 = c(1, 1, 0),
print("Resultado:")
q()
setwd("C:\Users\Raul\OneDrive - Universidad de Alcala\Documentos\Ingeniería Informática\4º Curso\Ciencia de Datos\Laboratorio\cienciadedatos\Apuntes\Raul")
setwd("C:/Users/Raul/OneDrive - Universidad de Alcala/Documentos/Ingeniería Informática/4º Curso/Ciencia de Datos/Laboratorio/cienciadedatos/Apuntes/Raul")
calificaciones=read.table("hunt.txt")
calificaciones
library(rpart, lib.loc = "C:/Program Files/R/R-4.3.1/library")
install.packages("rpart")
install.packages("rpart")
library(rpart)
clasificacion = rpart(C.G~T+L+P, data=muestra, method="class", minsplit=1)
clasificacion=rpart(C.G~T+L+P, data=muestra, )
clasificacion
calificaciones = read.table("hunt.txt")
(muestra = data.frame(calificaciones))
clasificacion = rpart(C.G~T+L+P, data=muestra, method="class", minsplit=1)
calificaciones = read.table("hunt.txt")
(muestra = data.frame(calificaciones))
clasificacion = rpart(CG~T+L+P, data=muestra, method="class", minsplit=1)
clasificacion
planetas = read.table("planetas.txt")
(muestra = data.frame(planetas))
planetas = read.table("planetas.txt")
(muestra = data.frame(planetas))
planetas = read.table("planetas.txt")
(muestra = data.frame(planetas))
muestra = read.table("planetas.txt")
regresion = lm(D~R, data = muestra)
regresion
summary(regression)
summary(regresion)
(res = summary(regresion)$residuals)
(rs = sqrt(sum(res^2)/4))
for (i in 1:length(res)) {
if (res[i] > 0) {
print("el suceso"); print(res[i]); print("es un suceso anómalo o outlier")
}
}
for (i in 1:length(res)) {
if (res[i] > 3*sr) {
print("el suceso"); print(res[i]); print("es un suceso anómalo o outlier")
}
}
for (i in 1:length(res)) {
if (res[i] > 3*rs) {
print("el suceso"); print(res[i]); print("es un suceso anómalo o outlier")
}
}
muestra = read.table("regresionOutlier.txt")
muestra = read.table("regresionOutliers.txt")
regresion = lm(D~R, data = muestra)
regresion
summary(regresion)
(res = summary(regresion)$residuals)
(rs = sqrt(sum(res^2)/7))
for (i in 1:length(res)) {
if (res[i] > 2*rs) {
print("el suceso"); print(res[i]); print("es un suceso anómalo o outlier")
}
}
